package dental_clinic;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Ana Marie Lim
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import dow.ConnectionProvider;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JOptionPane;
import javax.swing.JTable; // For JTable
import javax.swing.table.DefaultTableModel;

public class patientRecordTableTEST extends javax.swing.JFrame {

    public static int id;
    
    /** Creates new form fullPatientRecord */
    public patientRecordTableTEST() {
        initComponents();
        this.setLocationRelativeTo(null);
        Connect();

    }
    
    Connection con;
    PreparedStatement pst;
    
    public void Connect() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dental", "root", "helios5600");
            System.out.println("Connected!");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(patientInformationFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error 1!");
        } catch (SQLException ex) {
            Logger.getLogger(patientInformationFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error 2!");
        }

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        viewFullRecordButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1170, 710));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jPanel1.setMinimumSize(new java.awt.Dimension(1170, 710));
        jPanel1.setPreferredSize(new java.awt.Dimension(1170, 710));
        jPanel1.setLayout(null);

        viewFullRecordButton.setContentAreaFilled(false);
        viewFullRecordButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewFullRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFullRecordButtonActionPerformed(evt);
            }
        });
        jPanel1.add(viewFullRecordButton);
        viewFullRecordButton.setBounds(920, 610, 180, 60);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Patient Name", "Age", "Contact Number", "Service Availed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(90, 120, 1000, 470);

        backButton.setContentAreaFilled(false);
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(backButton);
        backButton.setBounds(70, 633, 40, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Ana Marie Lim\\Documents\\Dental\\2\\Updated\\View Patient Info Table.png")); // NOI18N
        jLabel1.setText("asd");
        jLabel1.setMaximumSize(new java.awt.Dimension(1170, 710));
        jLabel1.setMinimumSize(new java.awt.Dimension(1170, 710));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1170, 708);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewFullRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFullRecordButtonActionPerformed
        int row = jTable1.getSelectedRow(); // Get the selected row index

        // Check if a row is selected
        if (row != -1) {
            // Retrieve and print the value from the selected row's first column
            System.out.println(jTable1.getValueAt(row, 0).toString());

            String patientVariable = jTable1.getValueAt(row, 0).toString();

            // Close the current frame and open the fullPatientRecord frame
            setVisible(false);
            new fullPatientRecord().setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a record.");
        }

        
        
    }//GEN-LAST:event_viewFullRecordButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
     try{
            Statement st2 = con.createStatement();
            pst = con.prepareStatement("SELECT *FROM patientrecords");
            ResultSet rs = pst.executeQuery();
            ResultSet rs2 = st2.executeQuery("SELECT *FROM dental_services");

            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);

            while(rs.next() && rs2.next()){
                model.addRow(new Object[]{rs.getInt("pk"), rs.getString("patientName"),rs.getString("patientDOB"),rs.getString("patientContact"), rs2.getString("ServiceType")});
            }

        }catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_formComponentShown

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            // Retrieve data from the selected row
            int number = (Integer) jTable1.getValueAt(selectedRow, 0);
            String patientName = (String) jTable1.getValueAt(selectedRow, 1);
            String age = (String) jTable1.getValueAt(selectedRow, 2);
            String contactNum = (String) jTable1.getValueAt(selectedRow, 3);
            String service = (String) jTable1.getValueAt(selectedRow, 4);
            
            // Call a method to retrieve data from MySQL
            retrieveFromDatabase(number); 
    }//GEN-LAST:event_jTable1MouseClicked
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patientRecordTableTEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patientRecordTableTEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patientRecordTableTEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patientRecordTableTEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patientRecordTableTEST().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton viewFullRecordButton;
    // End of variables declaration//GEN-END:variables

    private void retrieveFromDatabase(Integer number) {
    String url = "jdbc:mysql://localhost:3306/dental"; // Replace with your database URL
    String username = "root"; // Replace with your database username
    String password = "helios5600"; // Replace with your database password

    String query = "SELECT * FROM patientrecords WHERE pk = ?"; // Replace 'your_table_name' with your actual table name

    try (Connection connection = DriverManager.getConnection(url, username, password);
         PreparedStatement statement = connection.prepareStatement(query)) {
        
        statement.setInt(1, number);
        ResultSet resultSet = statement.executeQuery();

        if (resultSet.next()) {
            // Retrieve data from the ResultSet
            id = resultSet.getInt("pk");
            String name = resultSet.getString("patientName");
            // Add other fields as needed

            // Do something with the retrieved data
            System.out.println("ID: " + id + ", Name: " + name);
        } else {
            System.out.println("No records found for the given ID.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

    void setVisble(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
