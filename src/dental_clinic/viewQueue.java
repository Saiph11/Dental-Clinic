package dental_clinic;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Ana Marie Lim
 */

import dow.ConnectionProvider;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class viewQueue extends javax.swing.JFrame {

    /** Creates new form fullPatientRecord */
    public viewQueue() {
        initComponents();
        this.setLocationRelativeTo(null);
        

    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        priorityQueueNumber = new javax.swing.JLabel();
        normalqueueNumber = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        priorityQueue = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        normalQueue = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1170, 710));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jPanel1.setMinimumSize(new java.awt.Dimension(1170, 710));
        jPanel1.setPreferredSize(new java.awt.Dimension(1170, 710));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Category");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(780, 530, 190, 30);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Category");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(780, 290, 190, 30);

        priorityQueueNumber.setFont(new java.awt.Font("Montserrat Alternates Medium", 0, 80)); // NOI18N
        priorityQueueNumber.setForeground(new java.awt.Color(66, 66, 66));
        priorityQueueNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priorityQueueNumber.setText("00");
        jPanel1.add(priorityQueueNumber);
        priorityQueueNumber.setBounds(820, 450, 110, 80);

        normalqueueNumber.setFont(new java.awt.Font("Montserrat Alternates Medium", 0, 80)); // NOI18N
        normalqueueNumber.setForeground(new java.awt.Color(66, 66, 66));
        normalqueueNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        normalqueueNumber.setText("00");
        jPanel1.add(normalqueueNumber);
        normalqueueNumber.setBounds(820, 210, 110, 80);

        priorityQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Queue Number", "Category", "Service Availed"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        priorityQueue.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(priorityQueue);
        if (priorityQueue.getColumnModel().getColumnCount() > 0) {
            priorityQueue.getColumnModel().getColumn(0).setResizable(false);
            priorityQueue.getColumnModel().getColumn(1).setResizable(false);
            priorityQueue.getColumnModel().getColumn(2).setResizable(false);
            priorityQueue.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(70, 380, 550, 200);

        normalQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Queue Number", "Category", "Service Availed"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        normalQueue.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(normalQueue);
        if (normalQueue.getColumnModel().getColumnCount() > 0) {
            normalQueue.getColumnModel().getColumn(0).setResizable(false);
            normalQueue.getColumnModel().getColumn(1).setResizable(false);
            normalQueue.getColumnModel().getColumn(2).setResizable(false);
            normalQueue.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(70, 140, 550, 200);

        editButton.setContentAreaFilled(false);
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        jPanel1.add(editButton);
        editButton.setBounds(975, 623, 160, 50);

        backButton.setBorderPainted(false);
        backButton.setContentAreaFilled(false);
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(backButton);
        backButton.setBounds(70, 633, 40, 30);

        background.setIcon(new javax.swing.ImageIcon("C:\\Users\\Paul Laurence Reyes\\Documents\\NU\\2nd Year\\DATA STRUCTURES AND ALGORITHMS\\Dental_UI\\View Queue.png")); // NOI18N
        background.setText("asd");
        background.setMaximumSize(new java.awt.Dimension(1170, 710));
        background.setMinimumSize(new java.awt.Dimension(1170, 710));
        background.setPreferredSize(new java.awt.Dimension(1170, 710));
        jPanel1.add(background);
        background.setBounds(0, 0, 1170, 710);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        this.setVisible(false);
        editQueue edit = new editQueue();
        edit.setVisible(true);
    }//GEN-LAST:event_editButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
    try{
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            
            
            ResultSet rs = st.executeQuery("SELECT *FROM patientrecords");


            DefaultTableModel model = (DefaultTableModel)normalQueue.getModel();
            model.setRowCount(0);

            while(rs.next()){
                model.addRow(new Object[]{rs.getString("patientName"),rs.getString("patient_pk"),rs.getString("patientCategory"), rs.getString("patientServices")});
            }

        }catch(Exception e){
            e.printStackTrace();
        }
    try{
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery("SELECT *FROM prioritypatientrecords");


            DefaultTableModel model = (DefaultTableModel)priorityQueue.getModel();
            model.setRowCount(0);

            while(rs.next()){
                model.addRow(new Object[]{rs.getString("patientName"),rs.getString("patient_pk"),rs.getString("patientCategory"), rs.getString("patientServices")});
            }

        }catch(Exception e){
            e.printStackTrace();
        }
    
    
    
    
    
    
    if(priorityQueue.getRowCount() > 0){
    int patientNumberColumn = 1;
    Object patientQueueNum = priorityQueue.getValueAt(0, patientNumberColumn);
    
    String patientQueueNumString = patientQueueNum.toString();
    priorityQueueNumber.setText(patientQueueNumString);  
    
    }else{
        System.out.println("Table is empty :<");
    }
    
    
    if(normalQueue.getRowCount() > 0){
    int patientNumberColumn2 = 1;
    Object patientQueueNum2 = normalQueue.getValueAt(0, patientNumberColumn2);
    
    String patientQueueNumString2 = patientQueueNum2.toString();
    normalqueueNumber.setText(patientQueueNumString2);    
    
    }else{
        System.out.println("Table is empty :<");
    }
    
    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewQueue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel background;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable normalQueue;
    private javax.swing.JLabel normalqueueNumber;
    private javax.swing.JTable priorityQueue;
    private javax.swing.JLabel priorityQueueNumber;
    // End of variables declaration//GEN-END:variables

}
